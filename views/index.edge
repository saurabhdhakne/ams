@layout('layout.app')

@section('content')
<link href="https://fonts.googleapis.com/css2?family=Caveat:wght@700&display=swap" rel="stylesheet">
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css"
integrity="sha512-xwE/Az9zrjBIphAcBb3F6JVqxf46+CDLwfLMHloNu6KEQCAWi6HcDUbeOfBIptF7tcCzusKFjFw2yuvEpDL9wQ=="
crossorigin=""/>
<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"
integrity="sha512-gZwIG9x3wUXg2hdXF6+rVkLF/0Vi9U8D2Ntg4Ga5I5BZpVkVxlJWbSQtXPSiUTtC0TjtGOmxa1AJPuV0CPthew=="
crossorigin=""></script>

<div class="container-fluid pb-5">
   <div class="row p-1">
    
    <div class="col-md-8  mt-4" onload="getLocation()">
        <form action="" class="col-md-12 col-sm-12">
            
            <input type="hidden" name="location" value="">
            
            <div id="map" class="mb-3 shadowme" style="width:100%; height:60vh;z-index:8"></div>

            <input type="button" id="loadLoc" class="btn btn-success m-2" value="Go Live" onclick="liveStream()">
            <input type="button" id="stopStream" class="btn btn-danger m-2" value="Go Ofline" onclick="window.location='/home' ">

        </form>

    </div>
    <div class="col-md-4 p-2 pt-4">
      <h3 class="col-12 bg-light p-2 text-center card">Ambulances</h3>
      @each(dt in ambulance)

            <h5 class="col-12 card bg-secondary text-center text-light pt-2 pb-2 mt-4" onclick="">{{dt.number_plate}}</h5>
      
      @endeach

    </div>
    <div class="col-md-12 pt-5">
     
        <div class="row signals">
        
        @each(dt in signals)
            <div class="col-4 mt-3">
                <a class="btn btn-primary btn-block" data-toggle="collapse" href="#signal{{dt.id}}" role="button" aria-expanded="false" aria-controls="signal{{dt.id}}">
                {{dt.sname}}
            </a>
            <div class="collapse mt-2" id="signal{{dt.id}}">
                <div class="card card-body  bg-dark text-light  text-center">
                    
                    <div class="col-12 p-3"> <input type="button" class="btn btn-success pl-4 pr-4" onclick="signalOpen(1,'{{dt.ip}}')" value="{{dt.signal1}}"> </div>
                
                    <div class="row">
                        <div class="col-5"> <input type="button" class="btn btn-success pl-1 pr-1 col-12" onclick="signalOpen(2,'{{dt.ip}}')" value="{{dt.signal2}}"> </div>
                        <div class="col-2"> <input type="button" class="btn btn-danger col-12" onclick="signalRed('{{dt.sname}}')" value="+"> </div>
                        <div class="col-5"> <input type="button" class="btn btn-success pl-1 pr-1 col-12" onclick="signalOpen(3,'{{dt.ip}}')" value="{{dt.signal3}}"> </div>
                    </div>
                
                    <div class="col-12 p-3"> <input type="button" class="btn btn-success pl-4 pr-4" onclick="signalOpen(4,'{{dt.ip}}')" value="{{dt.signal4}}"> </div>

                    </div>
            
            </div>
            </div>
        @endeach
            <script>
                function signalOpen(id,ip){
                    alert('Signal No. '+ id +', Open with ip: '+ip );
                }
                function signalRed(dest){
                    alert('All Signal are RED in '+ dest);
                }
            </script>
      </div>
      
    </div>
   </div>
</div>

{{--  Map Signals  --}}

<script>  planes = []; planes2 = []  </script>
@each(dt in signals) 
<script>
    planes.push(['{{ dt.sname }}','{{dt.lat}}','{{dt.lng}}' ])
</script>
@endeach

<script>
  
    var marker, crd, loc1, point1 ;
    var map = L.map('map').setView([19.908323, 75.364891], 15);

    var LeafIcon = L.Icon.extend({
		options: {
			iconSize:     [30,80],
            popupAnchor:  [-3, -86],
            iconAnchor:   [22, 94]
		}
    });

    var VehicleIcon = L.Icon.extend({
		options: {
			iconSize:     [50,50],
            popupAnchor:  [-3, -86],
            iconAnchor:   [22, 94]
		}
    });
    
    var greenIcon = new LeafIcon({iconUrl: './img/gif14.gif'});
    
	var vechIcon = new VehicleIcon({iconUrl: './img/gif16.gif'});
        
    mapLink = 
        '<a href="http://openstreetmap.org">OpenStreetMap</a>';
    L.tileLayer(
        'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
        attribution: '&copy; ' + mapLink + ' Contributors',
        maxZoom: 18,
        }).addTo(map);

for (var i = 0; i < planes.length; i++) {
  marker = new L.marker([planes[i][1],planes[i][2]], {icon: greenIcon} )
    .bindPopup("<a href='openHostel?hname="+planes[i][0]+"''>"+ planes[i][0]+"</a>")
    .addTo(map);
}

map.locate({setView : true});
crd = marker.getLatLng();
</script>
<script>
   function loadLoc0() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                ambulanceData = JSON.parse(this.responseText);
                console.log(typeof ambulanceData);
                planes2 = [];
                for (i in ambulanceData){
                    temp = [];
                    temp[0] = ambulanceData[i].number_plate;
                    temp[1] = ambulanceData[i].lat;
                    temp[2] = ambulanceData[i].lng;
                    planes2.push(temp);
                }
                 console.log(planes2);   
                
                for (var i = 0; i < planes2.length; i++) {
                this["marker"+i] = new L.marker([planes2[i][1],planes2[i][2]], {icon: vechIcon} )
                    .bindPopup("<a href='openAmbulance?hname="+planes2[i][0]+"''>"+ planes2[i][0]+"</a>")
                    .addTo(map);
                }

            }
        };
        xhttp.open("GET", "getAmbulanceLocations", true);
        xhttp.send();
    }
    loadLoc0();
    function loadLoc() {
        var xhttp = new XMLHttpRequest();
        xhttp.onreadystatechange = function() {
            if (this.readyState == 4 && this.status == 200) {
                ambulanceData = JSON.parse(this.responseText);
                console.log(typeof ambulanceData);
                planes2 = [];
                for (i in ambulanceData){
                    temp = [];
                    temp[0] = ambulanceData[i].number_plate;
                    temp[1] = ambulanceData[i].lat;
                    temp[2] = ambulanceData[i].lng;
                    planes2.push(temp);
                 }
                map.eachLayer(function (layer) {
                    map.removeLayer(layer);
                });
                mapLink = 
                    '<a href="http://openstreetmap.org">OpenStreetMap</a>';
                L.tileLayer(
                    'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    attribution: '&copy; ' + mapLink + ' Contributors',
                    maxZoom: 18,
                    }).addTo(map);
                for (var i = 0; i < planes.length; i++) {
                    marker = new L.marker([planes[i][1],planes[i][2]], {icon: greenIcon} )
                        .bindPopup("<a href='openHostel?hname="+planes[i][0]+"''>"+ planes[i][0]+"</a>")
                        .addTo(map);
                }
                for (var i = 0; i < planes2.length; i++) {
                this["marker"+i] = new L.marker([planes2[i][1],planes2[i][2]], {icon: vechIcon} )
                    .bindPopup("<a href='openHostel?hname="+planes2[i][0]+"''>"+ planes2[i][0]+"</a>")
                    .addTo(map);
                }

            }
        };
        xhttp.open("GET", "getAmbulanceLocations", true);
        xhttp.send();
        setTimeout(loadLoc,4000);
    }
    
    function liveStream(){
        alert("Live Monitoring is Starting...!")
        document.getElementById('loadLoc').style.display = "none";
        document.getElementById('stopStream').style.display = "block";

        loadLoc();

    }
    // loadLoc();
    
</script>


@endsection